using System.Runtime.CompilerServices;

namespace ArcPyNet;

public static class SpatialAnalyst
{
    private static Variable Run(object?[] args, [CallerMemberName] string method = "")
    {
        return ArcPy.Run($"arcpy.sa.{method}", args);
    }

    public static Variable ACos(params object?[] args) => Run(args);
    public static Variable ACosH(params object?[] args) => Run(args);
    public static Variable ASin(params object?[] args) => Run(args);
    public static Variable ASinH(params object?[] args) => Run(args);
    public static Variable ATan(params object?[] args) => Run(args);
    public static Variable ATan2(params object?[] args) => Run(args);
    public static Variable ATanH(params object?[] args) => Run(args);
    public static Variable Abs(params object?[] args) => Run(args);
    public static Variable AddSurfaceInformation(params object?[] args) => Run(args);
    public static Variable Aggregate(params object?[] args) => Run(args);
    public static Variable AggregateMultidimensionalRaster(params object?[] args) => Run(args);
    public static Variable Anomaly(params object?[] args) => Run(args);
    public static Variable Apply(params object?[] args) => Run(args);
    public static Variable ApplyEnvironment(params object?[] args) => Run(args);
    public static Variable AreaSolarRadiation(params object?[] args) => Run(args);
    public static Variable ArgStatistics(params object?[] args) => Run(args);
    public static Variable Arithmetic(params object?[] args) => Run(args);
    public static Variable Aspect(params object?[] args) => Run(args);
    public static Variable AspectSlope(params object?[] args) => Run(args);
    public static Variable BAI(params object?[] args) => Run(args);
    public static Variable BandArithmetic(params object?[] args) => Run(args);
    public static Variable BandCollectionStats(params object?[] args) => Run(args);
    public static Variable Basin(params object?[] args) => Run(args);
    public static Variable BitwiseAnd(params object?[] args) => Run(args);
    public static Variable BitwiseLeftShift(params object?[] args) => Run(args);
    public static Variable BitwiseNot(params object?[] args) => Run(args);
    public static Variable BitwiseOr(params object?[] args) => Run(args);
    public static Variable BitwiseRightShift(params object?[] args) => Run(args);
    public static Variable BitwiseXOr(params object?[] args) => Run(args);
    public static Variable BlockStatistics(params object?[] args) => Run(args);
    public static Variable BooleanAnd(params object?[] args) => Run(args);
    public static Variable BooleanNot(params object?[] args) => Run(args);
    public static Variable BooleanOr(params object?[] args) => Run(args);
    public static Variable BooleanXOr(params object?[] args) => Run(args);
    public static Variable BoundaryClean(params object?[] args) => Run(args);
    public static Variable CIg(params object?[] args) => Run(args);
    public static Variable CIre(params object?[] args) => Run(args);
    public static Variable CalculateKernelDensityRatio(params object?[] args) => Run(args);
    public static Variable CellStatistics(params object?[] args) => Run(args);
    public static Variable ClassProbability(params object?[] args) => Run(args);
    public static Variable Classify(params object?[] args) => Run(args);
    public static Variable ClassifyRaster(params object?[] args) => Run(args);
    public static Variable ClayMinerals(params object?[] args) => Run(args);
    public static Variable Colormap(params object?[] args) => Run(args);
    public static Variable ColormapToRGB(params object?[] args) => Run(args);
    public static Variable ColorspaceConversion(params object?[] args) => Run(args);
    public static Variable CombinatorialAnd(params object?[] args) => Run(args);
    public static Variable CombinatorialOr(params object?[] args) => Run(args);
    public static Variable CombinatorialXOr(params object?[] args) => Run(args);
    public static Variable Combine(params object?[] args) => Run(args);
    public static Variable Complex(params object?[] args) => Run(args);
    public static Variable CompositeBand(params object?[] args) => Run(args);
    public static Variable CompoundParameter(params object?[] args) => Run(args);
    public static Variable ComputeConfusionMatrix(params object?[] args) => Run(args);
    public static Variable ComputeSegmentAttributes(params object?[] args) => Run(args);
    public static Variable Con(params object?[] args) => Run(args);
    public static Variable Contour(params object?[] args) => Run(args);
    public static Variable ContourList(params object?[] args) => Run(args);
    public static Variable ContourWithBarriers(params object?[] args) => Run(args);
    public static Variable ContrastBrightness(params object?[] args) => Run(args);
    public static Variable Convolution(params object?[] args) => Run(args);
    public static Variable Corridor(params object?[] args) => Run(args);
    public static Variable Cos(params object?[] args) => Run(args);
    public static Variable CosH(params object?[] args) => Run(args);
    public static Variable CostAllocation(params object?[] args) => Run(args);
    public static Variable CostBackLink(params object?[] args) => Run(args);
    public static Variable CostConnectivity(params object?[] args) => Run(args);
    public static Variable CostDistance(params object?[] args) => Run(args);
    public static Variable CostPath(params object?[] args) => Run(args);
    public static Variable CostPathAsPolyline(params object?[] args) => Run(args);
    public static Variable CreateAccuracyAssessmentPoints(params object?[] args) => Run(args);
    public static Variable CreateConstantRaster(params object?[] args) => Run(args);
    public static Variable CreateNormalRaster(params object?[] args) => Run(args);
    public static Variable CreateRandomRaster(params object?[] args) => Run(args);
    public static Variable CreateSignatures(params object?[] args) => Run(args);
    public static Variable Curvature(params object?[] args) => Run(args);
    public static Variable CutFill(params object?[] args) => Run(args);
    public static Variable DarcyFlow(params object?[] args) => Run(args);
    public static Variable DarcyVelocity(params object?[] args) => Run(args);
    public static Variable DeepLearningModelToEcd(params object?[] args) => Run(args);
    public static Variable Dendrogram(params object?[] args) => Run(args);
    public static Variable DeriveContinuousFlow(params object?[] args) => Run(args);
    public static Variable DeriveStreamAsLine(params object?[] args) => Run(args);
    public static Variable DeriveStreamAsRaster(params object?[] args) => Run(args);
    public static Variable Diff(params object?[] args) => Run(args);
    public static Variable DimensionalMovingStatistics(params object?[] args) => Run(args);
    public static Variable DistanceAccumulation(params object?[] args) => Run(args);
    public static Variable DistanceAllocation(params object?[] args) => Run(args);
    public static Variable Divide(params object?[] args) => Run(args);
    public static Variable EVI(params object?[] args) => Run(args);
    public static Variable EditSignatures(params object?[] args) => Run(args);
    public static Variable ElevationVoidFill(params object?[] args) => Run(args);
    public static Variable EqualTo(params object?[] args) => Run(args);
    public static Variable EqualToFrequency(params object?[] args) => Run(args);
    public static Variable EucAllocation(params object?[] args) => Run(args);
    public static Variable EucBackDirection(params object?[] args) => Run(args);
    public static Variable EucDirection(params object?[] args) => Run(args);
    public static Variable EucDistance(params object?[] args) => Run(args);
    public static Variable Exp(params object?[] args) => Run(args);
    public static Variable Exp10(params object?[] args) => Run(args);
    public static Variable Exp2(params object?[] args) => Run(args);
    public static Variable Expand(params object?[] args) => Run(args);
    public static Variable ExportTrainingDataForDeepLearning(params object?[] args) => Run(args);
    public static Variable Extent(params object?[] args) => Run(args);
    public static Variable ExtractBand(params object?[] args) => Run(args);
    public static Variable ExtractByAttributes(params object?[] args) => Run(args);
    public static Variable ExtractByCircle(params object?[] args) => Run(args);
    public static Variable ExtractByMask(params object?[] args) => Run(args);
    public static Variable ExtractByPoints(params object?[] args) => Run(args);
    public static Variable ExtractByPolygon(params object?[] args) => Run(args);
    public static Variable ExtractByRectangle(params object?[] args) => Run(args);
    public static Variable ExtractMultiValuesToPoints(params object?[] args) => Run(args);
    public static Variable ExtractValuesToPoints(params object?[] args) => Run(args);
    public static Variable FerrousMinerals(params object?[] args) => Run(args);
    public static Variable Fill(params object?[] args) => Run(args);
    public static Variable Filter(params object?[] args) => Run(args);
    public static Variable Float(params object?[] args) => Run(args);
    public static Variable FloatDivide(params object?[] args) => Run(args);
    public static Variable FloorDivide(params object?[] args) => Run(args);
    public static Variable FlowAccumulation(params object?[] args) => Run(args);
    public static Variable FlowDirection(params object?[] args) => Run(args);
    public static Variable FlowDistance(params object?[] args) => Run(args);
    public static Variable FlowLength(params object?[] args) => Run(args);
    public static Variable FocalFlow(params object?[] args) => Run(args);
    public static Variable FocalStatistics(params object?[] args) => Run(args);
    public static Variable Foreach(params object?[] args) => Run(args);
    public static Variable Functions(params object?[] args) => Run(args);
    public static Variable FuzzyGaussian(params object?[] args) => Run(args);
    public static Variable FuzzyLarge(params object?[] args) => Run(args);
    public static Variable FuzzyLinear(params object?[] args) => Run(args);
    public static Variable FuzzyMSLarge(params object?[] args) => Run(args);
    public static Variable FuzzyMSSmall(params object?[] args) => Run(args);
    public static Variable FuzzyMembership(params object?[] args) => Run(args);
    public static Variable FuzzyNear(params object?[] args) => Run(args);
    public static Variable FuzzyOverlay(params object?[] args) => Run(args);
    public static Variable FuzzySmall(params object?[] args) => Run(args);
    public static Variable GEMI(params object?[] args) => Run(args);
    public static Variable GNDVI(params object?[] args) => Run(args);
    public static Variable GVITM(params object?[] args) => Run(args);
    public static Variable GenerateMultidimensionalAnomaly(params object?[] args) => Run(args);
    public static Variable GenerateTrainingSamplesFromSeedPoints(params object?[] args) => Run(args);
    public static Variable Grayscale(params object?[] args) => Run(args);
    public static Variable GreaterThan(params object?[] args) => Run(args);
    public static Variable GreaterThanEqual(params object?[] args) => Run(args);
    public static Variable GreaterThanFrequency(params object?[] args) => Run(args);
    public static Variable HeatIndex(params object?[] args) => Run(args);
    public static Variable HfBinary(params object?[] args) => Run(args);
    public static Variable HfForward(params object?[] args) => Run(args);
    public static Variable HfInverseLinear(params object?[] args) => Run(args);
    public static Variable HfLinear(params object?[] args) => Run(args);
    public static Variable HfTable(params object?[] args) => Run(args);
    public static Variable HighestPosition(params object?[] args) => Run(args);
    public static Variable Hillshade(params object?[] args) => Run(args);
    public static Variable Idw(params object?[] args) => Run(args);
    public static Variable InList(params object?[] args) => Run(args);
    public static Variable InspectTrainingSamples(params object?[] args) => Run(args);
    public static Variable Int(params object?[] args) => Run(args);
    public static Variable InterpolateShape(params object?[] args) => Run(args);
    public static Variable IronOxide(params object?[] args) => Run(args);
    public static Variable IsNull(params object?[] args) => Run(args);
    public static Variable IsoCluster(params object?[] args) => Run(args);
    public static Variable IsoClusterUnsupervisedClassification(params object?[] args) => Run(args);
    public static Variable KernelDensity(params object?[] args) => Run(args);
    public static Variable Kriging(params object?[] args) => Run(args);
    public static Variable KrigingModelOrdinary(params object?[] args) => Run(args);
    public static Variable KrigingModelUniversal(params object?[] args) => Run(args);
    public static Variable LessThan(params object?[] args) => Run(args);
    public static Variable LessThanEqual(params object?[] args) => Run(args);
    public static Variable LessThanFrequency(params object?[] args) => Run(args);
    public static Variable LineDensity(params object?[] args) => Run(args);
    public static Variable LineStatistics(params object?[] args) => Run(args);
    public static Variable LinearSpectralUnmixing(params object?[] args) => Run(args);
    public static Variable LinearUnmixing(params object?[] args) => Run(args);
    public static Variable Ln(params object?[] args) => Run(args);
    public static Variable LocateRegions(params object?[] args) => Run(args);
    public static Variable Log10(params object?[] args) => Run(args);
    public static Variable Log2(params object?[] args) => Run(args);
    public static Variable Lookup(params object?[] args) => Run(args);
    public static Variable LowestPosition(params object?[] args) => Run(args);
    public static Variable MLClassify(params object?[] args) => Run(args);
    public static Variable MSAVI(params object?[] args) => Run(args);
    public static Variable MTVI2(params object?[] args) => Run(args);
    public static Variable MajorityFilter(params object?[] args) => Run(args);
    public static Variable Mask(params object?[] args) => Run(args);
    public static Variable Minus(params object?[] args) => Run(args);
    public static Variable Mod(params object?[] args) => Run(args);
    public static Variable NBR(params object?[] args) => Run(args);
    public static Variable NDBI(params object?[] args) => Run(args);
    public static Variable NDMI(params object?[] args) => Run(args);
    public static Variable NDSI(params object?[] args) => Run(args);
    public static Variable NDVI(params object?[] args) => Run(args);
    public static Variable NDVIre(params object?[] args) => Run(args);
    public static Variable NDWI(params object?[] args) => Run(args);
    public static Variable NaturalNeighbor(params object?[] args) => Run(args);
    public static Variable NbrAnnulus(params object?[] args) => Run(args);
    public static Variable NbrCircle(params object?[] args) => Run(args);
    public static Variable NbrIrregular(params object?[] args) => Run(args);
    public static Variable NbrRectangle(params object?[] args) => Run(args);
    public static Variable NbrWedge(params object?[] args) => Run(args);
    public static Variable NbrWeight(params object?[] args) => Run(args);
    public static Variable Negate(params object?[] args) => Run(args);
    public static Variable Nibble(params object?[] args) => Run(args);
    public static Variable NotEqual(params object?[] args) => Run(args);
    public static Variable ObserverPoints(params object?[] args) => Run(args);
    public static Variable OptimalPathAsLine(params object?[] args) => Run(args);
    public static Variable OptimalPathAsRaster(params object?[] args) => Run(args);
    public static Variable OptimalRegionConnections(params object?[] args) => Run(args);
    public static Variable Over(params object?[] args) => Run(args);
    public static Variable PVI(params object?[] args) => Run(args);
    public static Variable Pansharpen(params object?[] args) => Run(args);
    public static Variable ParameterClasses(params object?[] args) => Run(args);
    public static Variable ParticleTrack(params object?[] args) => Run(args);
    public static Variable PathAllocation(params object?[] args) => Run(args);
    public static Variable PathBackLink(params object?[] args) => Run(args);
    public static Variable PathDistance(params object?[] args) => Run(args);
    public static Variable Pick(params object?[] args) => Run(args);
    public static Variable Plus(params object?[] args) => Run(args);
    public static Variable Point(params object?[] args) => Run(args);
    public static Variable PointDensity(params object?[] args) => Run(args);
    public static Variable PointStatistics(params object?[] args) => Run(args);
    public static Variable PointsSolarRadiation(params object?[] args) => Run(args);
    public static Variable Popularity(params object?[] args) => Run(args);
    public static Variable PorousPuff(params object?[] args) => Run(args);
    public static Variable Power(params object?[] args) => Run(args);
    public static Variable PrincipalComponents(params object?[] args) => Run(args);
    public static Variable RTVICore(params object?[] args) => Run(args);
    public static Variable RadiusFixed(params object?[] args) => Run(args);
    public static Variable RadiusVariable(params object?[] args) => Run(args);
    public static Variable Rank(params object?[] args) => Run(args);
    public static Variable Raster(params object?[] args) => Run(args);
    public static Variable RasterCalculator(params object?[] args) => Run(args);
    public static Variable RasterCellIterator(params object?[] args) => Run(args);
    public static Variable RasterInfo(params object?[] args) => Run(args);
    public static Variable RasterizeFeatures(params object?[] args) => Run(args);
    public static Variable ReclassByASCIIFile(params object?[] args) => Run(args);
    public static Variable ReclassByTable(params object?[] args) => Run(args);
    public static Variable Reclassify(params object?[] args) => Run(args);
    public static Variable RegionGroup(params object?[] args) => Run(args);
    public static Variable RegionGrow(params object?[] args) => Run(args);
    public static Variable Remap(params object?[] args) => Run(args);
    public static Variable RemapRange(params object?[] args) => Run(args);
    public static Variable RemapValue(params object?[] args) => Run(args);
    public static Variable RemoveRasterSegmentTilingArtifacts(params object?[] args) => Run(args);
    public static Variable Render(params object?[] args) => Run(args);
    public static Variable Resample(params object?[] args) => Run(args);
    public static Variable RescaleByFunction(params object?[] args) => Run(args);
    public static Variable RoundDown(params object?[] args) => Run(args);
    public static Variable RoundUp(params object?[] args) => Run(args);
    public static Variable SAVI(params object?[] args) => Run(args);
    public static Variable SRre(params object?[] args) => Run(args);
    public static Variable Sample(params object?[] args) => Run(args);
    public static Variable SegMeanShift(params object?[] args) => Run(args);
    public static Variable SegmentMeanShift(params object?[] args) => Run(args);
    public static Variable SetNull(params object?[] args) => Run(args);
    public static Variable ShadedRelief(params object?[] args) => Run(args);
    public static Variable Shrink(params object?[] args) => Run(args);
    public static Variable Sin(params object?[] args) => Run(args);
    public static Variable SinH(params object?[] args) => Run(args);
    public static Variable Sink(params object?[] args) => Run(args);
    public static Variable Slice(params object?[] args) => Run(args);
    public static Variable Slope(params object?[] args) => Run(args);
    public static Variable SnapPourPoint(params object?[] args) => Run(args);
    public static Variable SolarRadiationGraphics(params object?[] args) => Run(args);
    public static Variable Speckle(params object?[] args) => Run(args);
    public static Variable SpectralConversion(params object?[] args) => Run(args);
    public static Variable Spline(params object?[] args) => Run(args);
    public static Variable SplineWithBarriers(params object?[] args) => Run(args);
    public static Variable Square(params object?[] args) => Run(args);
    public static Variable SquareRoot(params object?[] args) => Run(args);
    public static Variable Statistics(params object?[] args) => Run(args);
    public static Variable StatisticsHistogram(params object?[] args) => Run(args);
    public static Variable StorageCapacity(params object?[] args) => Run(args);
    public static Variable StreamLink(params object?[] args) => Run(args);
    public static Variable StreamOrder(params object?[] args) => Run(args);
    public static Variable StreamToFeature(params object?[] args) => Run(args);
    public static Variable Stretch(params object?[] args) => Run(args);
    public static Variable Subset(params object?[] args) => Run(args);
    public static Variable Sultan(params object?[] args) => Run(args);
    public static Variable SurfaceParameters(params object?[] args) => Run(args);
    public static Variable TSAVI(params object?[] args) => Run(args);
    public static Variable TabulateArea(params object?[] args) => Run(args);
    public static Variable Tan(params object?[] args) => Run(args);
    public static Variable TanH(params object?[] args) => Run(args);
    public static Variable TasseledCap(params object?[] args) => Run(args);
    public static Variable Test(params object?[] args) => Run(args);
    public static Variable TfExponential(params object?[] args) => Run(args);
    public static Variable TfGaussian(params object?[] args) => Run(args);
    public static Variable TfLarge(params object?[] args) => Run(args);
    public static Variable TfLinear(params object?[] args) => Run(args);
    public static Variable TfLogarithm(params object?[] args) => Run(args);
    public static Variable TfLogisticDecay(params object?[] args) => Run(args);
    public static Variable TfLogisticGrowth(params object?[] args) => Run(args);
    public static Variable TfMSLarge(params object?[] args) => Run(args);
    public static Variable TfMSSmall(params object?[] args) => Run(args);
    public static Variable TfNear(params object?[] args) => Run(args);
    public static Variable TfPower(params object?[] args) => Run(args);
    public static Variable TfSmall(params object?[] args) => Run(args);
    public static Variable TfSymmetricLinear(params object?[] args) => Run(args);
    public static Variable Thin(params object?[] args) => Run(args);
    public static Variable Threshold(params object?[] args) => Run(args);
    public static Variable TimeMultipleDays(params object?[] args) => Run(args);
    public static Variable TimeSpecialDays(params object?[] args) => Run(args);
    public static Variable TimeWholeYear(params object?[] args) => Run(args);
    public static Variable TimeWithinDay(params object?[] args) => Run(args);
    public static Variable Times(params object?[] args) => Run(args);
    public static Variable TopoBoundary(params object?[] args) => Run(args);
    public static Variable TopoCliff(params object?[] args) => Run(args);
    public static Variable TopoCoast(params object?[] args) => Run(args);
    public static Variable TopoContour(params object?[] args) => Run(args);
    public static Variable TopoExclusion(params object?[] args) => Run(args);
    public static Variable TopoLake(params object?[] args) => Run(args);
    public static Variable TopoPointElevation(params object?[] args) => Run(args);
    public static Variable TopoSink(params object?[] args) => Run(args);
    public static Variable TopoStream(params object?[] args) => Run(args);
    public static Variable TopoToRaster(params object?[] args) => Run(args);
    public static Variable TopoToRasterByFile(params object?[] args) => Run(args);
    public static Variable TrainIsoClusterClassifier(params object?[] args) => Run(args);
    public static Variable TrainKNearestNeighborClassifier(params object?[] args) => Run(args);
    public static Variable TrainMaximumLikelihoodClassifier(params object?[] args) => Run(args);
    public static Variable TrainRandomTreesClassifier(params object?[] args) => Run(args);
    public static Variable TrainSupportVectorMachineClassifier(params object?[] args) => Run(args);
    public static Variable TransposeBits(params object?[] args) => Run(args);
    public static Variable Trend(params object?[] args) => Run(args);
    public static Variable UnitConversion(params object?[] args) => Run(args);
    public static Variable UpdateAccuracyAssessmentPoints(params object?[] args) => Run(args);
    public static Variable Utils(params object?[] args) => Run(args);
    public static Variable VARI(params object?[] args) => Run(args);
    public static Variable VectorField(params object?[] args) => Run(args);
    public static Variable VectorFieldRenderer(params object?[] args) => Run(args);
    public static Variable VfBinary(params object?[] args) => Run(args);
    public static Variable VfCos(params object?[] args) => Run(args);
    public static Variable VfCosSec(params object?[] args) => Run(args);
    public static Variable VfInverseLinear(params object?[] args) => Run(args);
    public static Variable VfLinear(params object?[] args) => Run(args);
    public static Variable VfSec(params object?[] args) => Run(args);
    public static Variable VfSecCos(params object?[] args) => Run(args);
    public static Variable VfSymInverseLinear(params object?[] args) => Run(args);
    public static Variable VfSymLinear(params object?[] args) => Run(args);
    public static Variable VfTable(params object?[] args) => Run(args);
    public static Variable Viewshed(params object?[] args) => Run(args);
    public static Variable Viewshed2(params object?[] args) => Run(args);
    public static Variable Visibility(params object?[] args) => Run(args);
    public static Variable WOTable(params object?[] args) => Run(args);
    public static Variable WSTable(params object?[] args) => Run(args);
    public static Variable Watershed(params object?[] args) => Run(args);
    public static Variable WeightedOverlay(params object?[] args) => Run(args);
    public static Variable WeightedSum(params object?[] args) => Run(args);
    public static Variable WindChill(params object?[] args) => Run(args);
    public static Variable ZonalFill(params object?[] args) => Run(args);
    public static Variable ZonalGeometry(params object?[] args) => Run(args);
    public static Variable ZonalGeometryAsTable(params object?[] args) => Run(args);
    public static Variable ZonalHistogram(params object?[] args) => Run(args);
    public static Variable ZonalRemap(params object?[] args) => Run(args);
    public static Variable ZonalStatistics(params object?[] args) => Run(args);
    public static Variable ZonalStatisticsAsTable(params object?[] args) => Run(args);
}
